//****************************************************************************
// Model: Grinder.qm
// File:  ./Grinder.h
//
// This code has been generated by QM tool (see state-machine.com/qm).
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//****************************************************************************
//${.::Grinder.h} ............................................................
#ifndef Grinder_h
#define Grinder_h

#include "includes.h"

extern QActive * const AO_Grinder;


//${AOs::Grinder} ............................................................
class Grinder : public QP::QMActive {
public:
    QTimeEvt timeEvt;
    float dose;

public:
    Grinder()
    : QMActive(Q_STATE_CAST(&Grinder::initial)),
      timeEvt(TIMEOUT_SIG)
    {}

protected:
    static QP::QState initial(Grinder * const me, QP::QEvt const * const e);
    static QP::QState on  (Grinder * const me, QP::QEvt const * const e);
    static QP::QState on_i(Grinder * const me);
    static QP::QMState const on_s;
    static QP::QState idle  (Grinder * const me, QP::QEvt const * const e);
    static QP::QMState const idle_s;
    static QP::QState grinding  (Grinder * const me, QP::QEvt const * const e);
    static QP::QState grinding_e(Grinder * const me);
    static QP::QMState const grinding_s;
};


#endif // Grinder_h
